package com.google.codejam._2019.q;

import org.junit.Test;

import java.math.BigInteger;
import java.util.Arrays;

import static com.google.codejam._2019.q.Solution3.cryptopangrams;
import static java.math.BigInteger.valueOf;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.CoreMatchers.notNullValue;
import static org.hamcrest.MatcherAssert.assertThat;

public class Solution3Test {


    @Test
    public void testCryptopangrams1() {

        assertThat(cryptopangrams(Arrays.asList(valueOf(217), valueOf(1891), valueOf(4819),
                valueOf(2291), valueOf(2987), valueOf(3811),
                valueOf(1739), valueOf(2491), valueOf(4717),
                valueOf(445), valueOf(65), valueOf(1079),
                valueOf(8383), valueOf(5353), valueOf(901), valueOf(187),
                valueOf(649), valueOf(1003), valueOf(697), valueOf(3239), valueOf(7663), valueOf(291),
                valueOf(123), valueOf(779), valueOf(1007), valueOf(3551), valueOf(1943), valueOf(2117), valueOf(1679), valueOf(989), valueOf(3053))),
                is("CJQUIZKNOWBEVYOFDPFLUXALGORITHMS"));

    }

    @Test
    public void testCryptopangrams2() {

        assertThat(cryptopangrams(Arrays.asList(valueOf(3292937), valueOf(175597), valueOf(18779), valueOf(50429),
                valueOf(375469), valueOf(1651121), valueOf(2102), valueOf(3722), valueOf(2376497), valueOf(611683),
                valueOf(489059), valueOf(2328901), valueOf(3150061),
                valueOf(829981), valueOf(421301), valueOf(76409), valueOf(38477), valueOf(291931),
                valueOf(730241), valueOf(959821), valueOf(1664197), valueOf(3057407), valueOf(4267589), valueOf(4729181), valueOf(5335543))),
                is("SUBDERMATOGLYPHICFJKNQVWXZ"));

    }

    @Test
    public void testCryptopangrams3() {

        assertThat(cryptopangrams(Arrays.asList(valueOf(217), valueOf(1891), valueOf(4819), valueOf(2291), valueOf(2987), valueOf(3811),
                valueOf(1739), valueOf(2491), valueOf(4717), valueOf(445), valueOf(65), valueOf(1079),
                valueOf(8383), valueOf(5353), valueOf(901), valueOf(187), valueOf(649), valueOf(1003),
                valueOf(697), valueOf(3239), valueOf(7663), valueOf(291), valueOf(123), valueOf(779),
                valueOf(1007), valueOf(3551), valueOf(1943), valueOf(2117), valueOf(1679), valueOf(989), valueOf(3053))),
                is("CJQUIZKNOWBEVYOFDPFLUXALGORITHMS"));

    }

    @Test
    public void testCryptopangrams4() {

        assertThat(cryptopangrams(Arrays.asList(valueOf(6), valueOf(15), valueOf(35), valueOf(77), valueOf(11 * 13),
                valueOf(13 * 17), valueOf(17 * 19), valueOf(19 * 23), valueOf(23 * 29), valueOf(29 * 31), valueOf(31 * 37), valueOf(37 * 41),
                valueOf(41 * 43), valueOf(43 * 47), valueOf(47 * 53), valueOf(53 * 59), valueOf(59 * 61), valueOf(61 * 67),
                valueOf(67 * 71), valueOf(71 * 73), valueOf(73 * 79), valueOf(79 * 83), valueOf(83 * 89), valueOf(89 * 97))),
                is("ABCDEFGHIJKLMNOPQRSTUVWXY"));

    }

    @Test
    public void testCryptopangrams5() {

        assertThat(cryptopangrams(
                Arrays.asList(valueOf(4), valueOf(4), valueOf(6), valueOf(9), valueOf(9), valueOf(15), valueOf(35),
                        valueOf(77), valueOf(11 * 13), valueOf(13 * 17), valueOf(17 * 19), valueOf(19 * 23),
                        valueOf(23 * 29), valueOf(29 * 31), valueOf(31 * 37), valueOf(37 * 41),
                        valueOf(41 * 43), valueOf(43 * 47), valueOf(47 * 53), valueOf(53 * 59), valueOf(59 * 61),
                        valueOf(61 * 67), valueOf(67 * 71), valueOf(71 * 73), valueOf(73 * 79), valueOf(79 * 83), valueOf(83 * 89), valueOf(89 * 97))),
                is("AAABBBCDEFGHIJKLMNOPQRSTUVWXY"));

    }

    @Test
    public void testCryptopangrams6() {

        assertThat(cryptopangrams(Arrays.asList(valueOf(4), valueOf(4), valueOf(6), valueOf(9), valueOf(9), valueOf(15))),
                is("AAABBBC"));

    }

    @Test
    public void testCryptopangrams7() {

        assertThat(cryptopangrams(Arrays.asList(valueOf(9973 * 9973), valueOf(9973 * 9973), valueOf(9973 * 9973), valueOf(9973 * 2), valueOf(2 * 3))),
                is("CCCCAB"));

    }

    @Test
    public void testCryptopangrams8() {

        assertThat(cryptopangrams(
                Arrays.asList(valueOf(3 * 2), valueOf(2 * 7), valueOf(7 * 11), valueOf(11 * 5))),
                is("BADEC"));

    }

    @Test
    public void testCryptopangrams9() {

        assertThat(cryptopangrams(
                Arrays.asList(valueOf(3 * 2), valueOf(2 * 3), valueOf(3 * 5))),
                is("BABC"));

    }

    @Test
    public void testCryptopangrams10() {

        assertThat(cryptopangrams(
                Arrays.asList(valueOf(5 * 11), valueOf(11 * 5), valueOf(5 * 7))),
                is("ACAB"));

    }

    @Test
    public void testCryptopangrams11() {

        assertThat(cryptopangrams(
                Arrays.asList(valueOf(5 * 11), valueOf(11 * 5), valueOf(5 * 11), valueOf(11 * 13))),
                is("ABABC"));

    }

    @Test
    public void testCryptopangrams12() {

        assertThat(cryptopangrams(
                Arrays.asList(valueOf(11 * 5), valueOf(5 * 11), valueOf(11 * 5), valueOf(5 * 13))),
                is("BABAC"));

    }

    @Test
    public void testCryptopangrams13() {

        assertThat(cryptopangrams(
                Arrays.asList(valueOf(11 * 5), valueOf(5 * 5), valueOf(5 * 11))),
                is("BAAB"));

    }

    @Test
    public void testCryptopangrams14() {

        assertThat(cryptopangrams(
                Arrays.asList(valueOf(13 * 5), valueOf(5 * 11), valueOf(11 * 5), valueOf(5 * 11))),
                is("CABAB"));

    }

    @Test
    public void testCryptopangrams15() {

        assertThat(cryptopangrams(
                Arrays.asList(valueOf(13 * 11), valueOf(11 * 5), valueOf(5 * 11), valueOf(11 * 5))),
                is("CBABA"));

    }

    @Test
    public void testCryptopangrams16() {

        assertThat(cryptopangrams(
                Arrays.asList(valueOf(11 * 5), valueOf(5 * 11), valueOf(11 * 5), valueOf(5 * 11), valueOf(11 * 13))),
                is("BABABC"));

    }

    @Test
    public void testCryptopangrams17() {

        assertThat(cryptopangrams(Arrays.asList(new BigInteger("182598187934571075628568273568937465235475983759837593457999934341"),
                new BigInteger("182598175983759837593305398458309548039580398503958039845375935375983759837459837459873945457999934341"),
                new BigInteger("1825981759837598378376583765873645873546837465837645837658375683765837568736575934579999343413453045093845345"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("1825098340259598734953945837598375983343434343434234034085345349817598375983759345799993434134530450938453456237891"),
                new BigInteger("182509834025959873495394583759837598334343434343423403408534534981759837598375934579999343"))),
                notNullValue());

    }

    @Test
    public void testCryptopangrams18() {

        assertThat(cryptopangrams(
                Arrays.asList(valueOf(15), valueOf(15), valueOf(15), valueOf(15), valueOf(21), valueOf(49), valueOf(77),
                        valueOf(143), valueOf(221), valueOf(323), valueOf(437), valueOf(667), valueOf(899), valueOf(1147),
                        valueOf(1517), valueOf(1763), valueOf(2021), valueOf(2491), valueOf(3127), valueOf(3599), valueOf(4087),
                        valueOf(4757), valueOf(5183), valueOf(5767), valueOf(6557), valueOf(7387), valueOf(8633), valueOf(9797), valueOf(10403)
                )),
                is("ABABACCDEFGHIJKLMNOPQRSTUVWXYZ"));

    }

    @Test
    public void testCryptopangrams19() {

        assertThat(cryptopangrams(
                Arrays.asList(valueOf(303), valueOf(303), valueOf(15), valueOf(10))),
                is("BDBCA"));

    }

}